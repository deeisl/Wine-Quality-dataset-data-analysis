Data Pre-processing and Cleaning of Red Wine Quality Dataset

Data Science II

COSC 4337

Submitted to

DR. Ricardo Vilalta

Submitted by

Dylan Flores (1872416)

# Introduction

For this assignment I have chosen to use the wine quality dataset,
provided by the UCI Machine Learning Repository, which includes two
separate datasets, a white wine sample and a red wine sample dataset.
This dataset provides an opportunity for individuals to grasp just how
in-depth the world of wine is. The data includes physicochemical and
sensory data from samples of red and white variants of the Portuguese
"Vinho Verde" wine. In this instance I have decided to utilize the red
wine sample firstly because I like red wine and secondly, they both
contained a good selection of examples and features that would be an
acceptable choice. Inside the datasets CSV file there is a total of 1600
examples to analyze and 13 different features that includes acidity,
sugar content, alcohol level, and more, alongside a quality rating
assigned by wine experts.

# Data Description

- Data source link -
  <https://archive.ics.uci.edu/dataset/186/wine+quality>

- Column and data type –

  - **Fixed acidity** - concentration of non-volatile acids in the wine,
    such as tartaric, malic, citric, and succinic acids, which
    contribute to the wine's acidity (float).

  - **Volatile acidity** - Measures the amount of acetic acid in the
    wine (float).

  - **Citric acid** – Concentration of Citric acid in the wine (float).

  - Residual sugar - amount of sugar remaining after fermentation has
    stopped, either because it was not wholly converted to alcohol or
    was added post-fermentation (float).

  - **Chlorides** - The amount of salt in the wine (float).

  - **Free sulfur dioxide** - The portion of SO2 that is not bound to
    other molecules and is free in the wine (int).

  - **Total sulfur dioxide** - The total amount of SO2 in the wine,
    including both free and bound forms (int).

  - **Density** – total density of the wine (float).

  - **pH** - acidity or basicity of the wine on a scale from 0 (very
    acidic) to 14 (very basic) (int).

  - **Sulphates** – Number of sulphates or additives present in the wine
    (float).

  - **Alcohol** - The percentage of alcohol by volume in the wine
    (float).

  - **Quality (score between 0 and 10)** - serves as the target for
    modeling efforts, where the goal is to predict wine quality based on
    its chemical makeup (int).

# Exploratory Data Analysis

1.  <img src="media/image1.png" style="width:3.63056in;height:1.48681in"
    alt="A screenshot of a computer program Description automatically generated" />To
    start the exploratory data analysis, I first needed to load and
    preview the dataset to make sure the data was loaded correctly into
    python.

2.  Next the exploratory data analysis was conducted by creating a
    distribution chart of the ‘quality’ feature as well as a correlation
    matrix.

<img src="media/image2.png" style="width:4.13681in;height:2.62569in"
alt="A screen shot of a computer program Description automatically generated" />

1.  EDA is crucial for understanding the structure of the dataset,
    identifying patterns, outliers, and relationships between variables.

    1.  **Distribution of 'quality'**: This visualization helps
        understand how the quality ratings are distributed, which is
        essential for determining if the dataset is imbalanced or if
        certain quality ratings are underrepresented.

    2.  <img src="media/image3.png" style="width:6.5in;height:3.9in"
        alt="A bar graph with blue rectangles Description automatically generated" />**Correlation
        Matrix:** By plotting a heatmap of the correlation matrix, I can
        identify how different features correlate with each other and
        with the variable (quality). This step is vital for feature
        selection and for understanding which variables might have more
        influence on the quality rating.

> <img src="media/image4.png" style="width:6.5in;height:5.41667in"
> alt="A screenshot of a graph Description automatically generated" />

# Data Cleaning and Dimensionality

1.  **Data Cleaning:**

    1.  To start cleaning the data I started by checking for any missing
        values so that I know when I train the data it isn’t incomplete
        which would lead to skewed results. Luckily this dataset did not
        have any missing data. However, if it did, I would possibly have
        to remove certain rows or columns.

    2.  Next, I needed to normalize the data and to do this I decided to
        use ‘StandardScaler’ which standardizes features by removing the
        mean and scaling to unit variance. This step is very important
        before moving onto dimensionality reduction since the method I
        used is sensitive to variances of the initial variables.

<img src="media/image5.png" style="width:6.5in;height:1.90833in"
alt="A screenshot of a computer Description automatically generated" />

2.  **Dimensionality reduction:**

    1.  <img src="media/image6.png" style="width:6.46736in;height:2.36458in"
        alt="A computer screen shot of a code Description automatically generated" />To
        perform the dimensionality reduction PCA or Principal component
        reduction was used to transform the data into a
        lower-dimensional space while retaining most of the variance. I
        decided to reduce the data to 2 dimensions (‘n_components=2’)
        for the sake of simplicity and visualization which will allow me
        to see how much of the variance can be captured in the 2
        dimensions.

    2.  The ‘explained_variance_ratio’ indicates the proportion of the
        datasets variance that lies along each principal component which
        in turn helps to understand the reduction.

    3.  I’ve also created a new data frame, ‘principalDF’, that contains
        the principal components and combined it with the quality column
        which allows me to see the reduced features in conjunction with
        the quality variable.

<img src="media/image7.png" style="width:4.95833in;height:1.57292in"
alt="A screenshot of a computer Description automatically generated" />The
results of the dimensionality reduction for the first 4 rows are as
follows:

> The PCA transformation indicates that the first two principal
> components capture a significant portion of the variance in the wine
> quality dataset. This suggests that these components encapsulate the
> essential patterns and relationships among the features that influence
> wine quality.

# Steps for running the code attached

1.  Import both “WineQualityCleaning.py” and “winequality-red.csv” into
    an open PyCharm project.

2.  Ensure there are no errors with the libraries at the top of the file
    being imported and if there are errors make sure that you install
    each library before trying to run the code.

3.  Once there are no errors and both files are in the directory of the
    PyCharm project simply click run and all the results listed should
    appear.
